---
import { GetStaticPathsOptions } from 'astro';
import { getBlogs } from '../../libs/macrocms';
import Layout from '../../layouts/Layout.astro';
import { getTop } from '../../libs/macrocms';
import BaseTitle from '../../components/BaseTitle.astro';
import Card from '../../components/Card.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';

const BlogData = await getBlogs({
  fields: ['id', 'title', 'eyecatch', 'category', 'publishedAt', 'writer'],
});

const data = BlogData.contents;
const { page } = Astro.props;

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const BlogData = await getBlogs({ limit: 3 });
  const totalCount = BlogData.totalCount;
  const totallimit = BlogData.limit;
  return paginate(BlogData.contents, { pageSize: totalCount / totallimit });
};

const lowerData = await getTop({
  fields: ['lowerTItle'],
});

const title = lowerData.lowerTItle.articleTitle;
---

<Layout title="Welcome to Astro." pageType="blog">
  <Breadcrumb lowerTitel="Articles" />
  <main class="main">
    <BaseTitle title={title} />
    <div class="blogs">
      {
        data.map((data: any) => {
          return <Card BlogData={data} />;
        })
      }
    </div>
    <nav class="pagenation">
      <div class="pagenation__wrapper">
        <div>
          <a href={page.url.prev}>PREV</a>
        </div>
        <p>{page.currentPage}/{page.lastPage}</p>
        <div>
          <a href={page.url.next}>NEXT</a>
        </div>
      </div>
    </nav>
  </main>
</Layout>

<style lang="scss">
  @import '../../styles/_single';

  .main {
    width: vw(1200);
    padding: vw(110) 0;
    margin: auto;
    border-right: 1px solid $color-base-black;
    border-left: 1px solid $color-base-black;

    @include sp() {
      width: 100%;
      padding: 0 vw_sp(30);
    }
  }

  .blogs {
    display: flex;
    flex-wrap: wrap;
    gap: vw(50);
    width: vw(1060);
    margin: vw(50) auto 0;
  }

  .pagenation {
    margin: 60px 0 0;
  }

  .pagenation__wrapper {
    display: flex;
    gap: vw(100);
    justify-content: center;
  }
</style>
