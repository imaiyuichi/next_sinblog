---
import type { GetStaticPaths } from 'astro';
import Layout from '../../layouts/Layout.astro';
import { getBlogs } from '../../libs/macrocms';
import Card from '../../components/Card.astro';
import AnimationBlur from '../../components/AnimationBlur.astro';
import ViewElement from '../../components/ViewElement.astro';

import type { GetStaticPathsOptions } from 'astro';

const BlogData = await getBlogs({
  fields: ['id', 'title', 'eyecatch', 'category'],
  limit: 5,
});

const data = BlogData.contents;

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const BlogData = await getBlogs({ limit: 1000 });
  return paginate(BlogData.contents, { pageSize: 3 });
};
const { page } = Astro.props;
---

<Layout title="Welcome to Astro." pageType="blog">
  <main class="main">
    {
      data.map((data: any) => {
        return <Card BlogData={data} />;
      })
    }
    <nav class="test">
      <p>{page.currentPage}/{page.lastPage}</p>
      <ul>
        {
          page.url.prev && (
            <li>
              <a href={page.url.prev}>PREV</a>
            </li>
          )
        }
        {/* page.url.nextがある場合は次ページへのリンクを表示 */}
        {
          page.url.next && (
            <li>
              <a href={page.url.next}>NEXT</a>
            </li>
          )
        }
      </ul>
    </nav>
  </main>
</Layout>

<style lang="scss">
  @import '../../styles/_single';

  .main {
    width: vw(1200);
    padding: vw(110) 0;
    margin: auto;

    @include sp() {
      width: 100%;
      padding: 0 vw_sp(30);
    }
  }

  .test {
    color: #000;
    transform: translate(-50% -50%) rotate(180deg);
  }
</style>
