---
import { GetStaticPathsOptions } from 'astro';
import { getBlogsAll, getTop } from '../../libs/macrocms';
import * as Variables from '../../variables.astro';
import Layout from '../../layouts/Layout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import BaseTitle from '../../components/BaseTitle.astro';
import Card from '../../components/Card.astro';
import Contact from '../../partials/Contact.astro';

import '@pagefind/default-ui/css/ui.css';

const topData = await getTop({
  fields: ['metaInfo'],
});

const lowerData = await getTop({
  fields: ['lowerTItle'],
});

const { metaInfo } = topData;
const { page } = Astro.props;
const title = lowerData.lowerTItle.articleTitle;

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const BlogDataAll = await getBlogsAll();
  return paginate(BlogDataAll, { pageSize: Variables.pageSize });
};
---

<Layout {...metaInfo} pageType="blog">
  <div class="bg">
    <Breadcrumb
      lowerTitel="Articles"
      lowerTitelSecond={`${page.currentPage}ページ目`}
    />
    <main class="main">
      <BaseTitle title={title} />

      <div class="blogs">
        {
          page.data.map((data: any) => {
            return <Card BlogData={data} />;
          })
        }
      </div>
      <nav class="pagenation">
        <div class="pagenation__wrapper">
          {
            page.url.prev ? (
              <a class="pageLInk" href={page.url.prev} data-pageActive="true">
                Prev
              </a>
            ) : (
              <div class="pageLInk">Prev</div>
            )
          }
          <div class="current">
            {
              // 1ページ目の時
              page.currentPage === 1 && (
                <>
                  <a
                    class="currentPage"
                    href={page.url.current}
                    data-pageActive="true"
                  >
                    {page.currentPage}
                  </a>
                  {page.currentPage + 1 <= page.lastPage && (
                    <a
                      class="currentPage"
                      href={`${Variables.PAGES.article.nav}${
                        page.currentPage + 1
                      }`}
                    >
                      {page.currentPage + 1}
                    </a>
                  )}
                  {page.currentPage + 2 <= page.lastPage && (
                    <a
                      class="currentPage"
                      href={`${Variables.PAGES.article.nav}${
                        page.currentPage + 2
                      }`}
                    >
                      {page.currentPage + 2}
                    </a>
                  )}
                  {page.currentPage + 3 <= page.lastPage && (
                    <>
                      {page.currentPage + 3 < page.lastPage && <div>...</div>}
                      <a
                        class="currentPage"
                        href={`${Variables.PAGES.article.nav}${page.lastPage}`}
                      >
                        {page.lastPage}
                      </a>
                    </>
                  )}
                </>
              )
            }
            {
              // 2ページ目以降の時
              page.currentPage !== 1 && page.currentPage !== page.lastPage && (
                <>
                  {page.currentPage - 2 >= 1 && (
                    <>
                      <a
                        class="currentPage"
                        href={`${Variables.PAGES.article.nav}1`}
                      >
                        1
                      </a>
                      {page.currentPage - 2 > 1 && <div>...</div>}
                    </>
                  )}
                  <a
                    class="currentPage"
                    href={`${Variables.PAGES.article.nav}${
                      page.currentPage - 1
                    }`}
                  >
                    {page.currentPage - 1}
                  </a>
                  <a
                    class="currentPage"
                    href={`${Variables.PAGES.article.nav}${page.currentPage}`}
                    data-pageActive="true"
                  >
                    {page.currentPage}
                  </a>
                  {page.currentPage + 1 <= page.lastPage && (
                    <a
                      class="currentPage"
                      href={`${Variables.PAGES.article.nav}${
                        page.currentPage + 1
                      }`}
                    >
                      {page.currentPage + 1}
                    </a>
                  )}
                  {page.currentPage + 2 <= page.lastPage && (
                    <>
                      {page.currentPage + 2 < page.lastPage && <div>...</div>}
                      <a
                        class="currentPage"
                        href={`${Variables.PAGES.article.nav}${page.lastPage}`}
                      >
                        {page.lastPage}
                      </a>
                    </>
                  )}
                </>
              )
            }
            {
              // 最後のページの時
              page.currentPage === page.lastPage && (
                <>
                  <a
                    class="currentPage"
                    href={`${Variables.PAGES.article.nav}1`}
                  >
                    1
                  </a>
                  {page.currentPage - 3 > 1 && <div>...</div>}
                  {page.currentPage - 2 < page.lastPage &&
                    page.currentPage - 2 > 1 && (
                      <a
                        class="currentPage"
                        href={`${Variables.PAGES.article.nav}${
                          page.currentPage - 2
                        }`}
                      >
                        {page.currentPage - 2}
                      </a>
                    )}
                  {page.currentPage - 1 < page.lastPage &&
                    page.currentPage - 1 > 1 && (
                      <a
                        class="currentPage"
                        href={`${Variables.PAGES.article.nav}${
                          page.currentPage - 1
                        }`}
                      >
                        {page.currentPage - 1}
                      </a>
                    )}
                  <a
                    class="currentPage"
                    href={page.url.current}
                    data-pageActive="true"
                  >
                    {page.currentPage}
                  </a>
                </>
              )
            }
          </div>
          {
            page.url.next ? (
              <a class="pageLInk" href={page.url.next} data-pageActive="true">
                Next
              </a>
            ) : (
              <div class="pageLInk">Next</div>
            )
          }
        </div>
      </nav>
    </main>
    <Contact />
  </div>
</Layout>

<style lang="scss">
  @import '../../styles/_single';

  .bg {
    background-color: $color-base-gray;
  }

  .main {
    position: relative;
    width: vw(1280);
    padding: 60px 0 0;
    margin: auto;
    border-right: 1px solid $color-base-lower-white;
    border-left: 1px solid $color-base-lower-white;

    @include sp() {
      width: vw_sp(320);
      padding: vw_sp(40) 0 0;
    }

    &::before {
      position: absolute;
      bottom: 0;
      left: 50%;
      width: 100vw;
      height: 1px;
      content: '';
      background-color: $color-base-black;
      transform: translateX(-50%);
    }
  }

  .blogs {
    display: flex;
    flex-wrap: wrap;
    gap: vw(50);
    width: vw(1060);
    margin: 50px auto 0;

    @include sp() {
      gap: vw_sp(30);
      justify-content: center;
      width: 100%;
      margin: vw_sp(50) auto 0;
    }
  }

  .pagenation {
    padding: 20px 0;
    margin: 60px 0 0;
    border-top: 1px solid $color-base-lower-white;

    @include sp() {
      padding: vw_sp(20) 0;
      margin: vw_sp(40) 0 0;
    }
  }

  .pagenation__wrapper {
    display: flex;
    gap: vw(100);
    align-items: center;
    justify-content: center;
  }

  .pageLInk {
    font-size: vw(14);
    font-weight: 400;
    line-height: 1.2;
    border-bottom: 1px solid $color-base-black;
    opacity: 0.3;

    @include sp() {
      font-size: vw_sp(14);
    }

    &[data-pageActive='true'] {
      font-size: vw(16);
      opacity: 1;

      @include sp() {
        font-size: vw_sp(16);
      }
    }
  }

  .current {
    display: flex;
    gap: vw(15);
    align-items: center;
    font-family: $font-family-termina;
    line-height: 1;

    @include sp() {
      gap: vw_sp(15);
    }
  }

  .currentPage {
    font-size: vw(14);
    font-weight: 400;
    opacity: 0.7;

    @include sp() {
      font-size: vw_sp(14);
    }

    &[data-pageActive='true'] {
      font-size: vw(19);
      font-weight: 700;

      @include sp() {
        font-size: vw_sp(16);
      }
    }
  }
</style>
