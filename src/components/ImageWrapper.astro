---
/**
 * @description Image Component　(AstroImageがSSRモード原因不明のエラーが発生するため) ローカルの画像はビルドのモードによって、画像の最適化を行う
 */

import { Image } from '@astrojs/image/components';

export interface Props {
  src: string;
  width: number;
  height: number;
  alt?: string;
  quality?: number;
  format?: any;
  classValue?: string;
}

const {
  src,
  width,
  height,
  alt = '',
  quality = 80,
  format = 'webp',
  classValue = '',
} = Astro.props;
---

{
  process.env.NODE_ENV_BUILD_MODE === 'ssg' ? (
    <Image
      src={src}
      width={width}
      height={height}
      alt={alt}
      quality={quality}
      format={format}
      class={classValue}
    />
  ) : (
    <img
      src={src}
      width={width}
      height={height}
      alt={alt}
      decoding="async"
      loading="lazy"
      class={classValue}
    />
  )
}

<style lang="scss" is:global>
  @import '../styles/_single';

  .image-cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .image-cover-top {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
  }

  .image-default {
    opacity: 1;
    transition: opacity $duration-base $easing-transform;

    .is-hover-target:hover & {
      opacity: 0;
    }
  }

  .image-hover {
    opacity: 0;
    transition: opacity $duration-base $easing-transform;

    .is-hover-target:hover & {
      opacity: 1;
    }
  }

  .image-z-index-0 {
    z-index: 0;
  }

  .image-z-index-minus-1 {
    z-index: -1;
  }

  .image-is-only-show-pc {
    @include sp() {
      display: none !important;
    }
  }

  .image-is-only-show-sp {
    @include not_sp() {
      display: none !important;
    }
  }

  .h-100 {
    width: auto;
    height: 100%;
  }

  .mix-blend-mode-overlay {
    mix-blend-mode: overlay;
  }
</style>
