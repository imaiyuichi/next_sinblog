---
import { getBlogs } from '../libs/macrocms';

const BlogData = await getBlogs({
    fields: ['id', 'title', 'eyecatch', 'category'],
    limit: 5,
});
---

<section class="root">
    <h2 class="title">Blog Contents</h2>
    <div class="blogs splide">
        <div class="splide__track">
            <ul class="splide__list">
                {
                    BlogData.contents.map((item: any) => (
                        <li class="blog splide__slide">
                            <a href={`/blog/${item.id}`} class="link">
                                <div class="blog__inner">
                                    <div class="blog__img">
                                        <img src={item.eyecatch.url} alt="" />
                                    </div>
                                    <div class="blog__text">
                                        <h2 class="blog__title">
                                            {item.title}
                                        </h2>
                                        <p class="blog__date">
                                            公開日：
                                            {new Date(
                                                item.category.publishedAt
                                            ).toLocaleString()}
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>
</section>

<script>
    import Splide from '@splidejs/splide';
    new Splide('.splide', {
        autoplay: true, // 自動再生
        type: 'loop', // ループ
        rewind: true, // スライダーの終わりまで行ったら先頭に巻き戻す
        interval: 5000, // 自動再生の間隔
        speed: 2000, // スライダーの移動時間
        focus: 'center', // アクティブなスライドを中央にする
        updateOnMove: true, // is-activeクラスを移動前に更新する
        padding: '15%', // スライダーの左右の余白
        gap: 100,
        pagination: true,
    }).mount();
</script>

<style lang="scss">
    @import '../styles/_single.scss';
    @import '@splidejs/splide/css/core';
    .root {
        position: relative;
        padding: 5rem 0 0;
        color: white;
        font-size: 20px;
        line-height: 1.6;
    }

    .title {
        font-size: 3rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
    }

    .blogs {
        margin: 4rem 0 0;
        position: relative;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100vw;
    }
    .blog {
        display: flex;
        background-color: #23262d;
        background-size: 400%;
        border-radius: 7px;
        background-position: 100%;
        transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    }

    .link {
        width: 100%;
        color: white;
        background-color: #23262d;
        opacity: 0.8;
    }

    .blog__inner {
        display: flex;
        gap: vw(30);
        padding: vw(10);
    }

    .blog__title {
        margin: vw(20) 0 0;
        font-size: vw(20);
        transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        @include line-clamp(1);
    }

    .blog__date {
        margin: vw(20) 0 0;
        font-size: vw(16);
    }

    .blog__img {
        width: 350px;
    }

    .blog:is(:hover, :focus-within) {
        background-position: 0;
        background-image: var(--accent-gradient);
    }

    .blog:is(:hover, :focus-within) h2 {
        color: rgb(var(--accent-light));
    }
</style>
<style lang="scss" is:global>
    .splide__arrow {
        svg {
            display: none;
        }
    }

    .splide__arrow--next {
        position: relative;
        z-index: 100;
        top: 50%;
        transform: translateY(-50%);

        &::before {
            position: absolute;
            top: 0;
            right: 5.6rem;
            transform: rotate(180deg) !important;
            width: 2.2rem;
            height: 2.2rem;
            background: url(../icons/arrow.svg) no-repeat;
            content: '';
        }
    }

    .splide__arrow--prev {
        position: relative;
        z-index: 100;
        top: 50%;
        transform: translateY(-50%);

        &::before {
            position: absolute;
            top: 0;
            left: 5.6rem;
            width: 2.2rem;
            height: 2.2rem;
            background: url(../icons/arrow.svg) no-repeat;
            content: '';
        }
    }

    .splide__slide {
        opacity: 0.3; /* 左右のスライドを薄くする */
        transition: 0.7s; /* ゆっくり小さくさせる */
    }
    /* アクティブなスライドのスタイル */
    .splide__slide.is-active {
        opacity: 1; /* 中央のスライドは薄くしない */
        transform: scale(1); /* 中央のスライドは小さくしない */
    }

    .splide__pagination {
        gap: 0.5rem;
        margin: 1rem 0 0 !important;
    }

    .splide__pagination__page {
        width: 0.5rem;
        height: 0.5rem;
        background-color: gray;
        border-radius: 9999px;

        &is-active {
        }
    }

    .splide__pagination__page.is-active {
        background-color: white;
    }
</style>
