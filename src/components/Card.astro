---
import ImageWrapper from '../components/ImageWrapper.astro';

interface Props {
  BlogData: {
    id: string;
    eyecatch: {
      url: string;
      width: number;
      height: number;
    };
    title: string;
    publishedAt?: string;
    updatedAt?: string;
    category: {
      image: { url: string; width: number; height: number };
      name: string;
    };
    writer?: string;
  };
  splide?: boolean;
}

const { BlogData, splide } = Astro.props;
---

<article class:list=`root blog ${splide && "splide__slide"}`>
  <a href={`/blog/${BlogData.id}`} class="link">
    <div class="blog__inner">
      <div class="blog__img">
        <ImageWrapper
          src={BlogData.eyecatch.url}
          width={BlogData.eyecatch.width}
          height={BlogData.eyecatch.height}
          alt=""
          classValue="image-cover"
        />
      </div>
      <div class="blog__text-area">
        <div class="blog__category">
          <div class="blog__category__inner">
            <div class="blog__category__image">
              <ImageWrapper
                src={BlogData.category.image.url}
                width={BlogData.category.image.width}
                height={BlogData.category.image.height}
                alt=""
              />
            </div>
            <p class="blog__category__text">{BlogData.category.name}</p>
            <span>|</span>
            <p class="blog__category__text">{BlogData.writer[0]}</p>
          </div>
        </div>
        <h2 class="blog__title">{BlogData.title}</h2>
        <p class="blog__date">
          {
            BlogData.publishedAt &&
              new Date(BlogData.publishedAt).toLocaleString('ja-JP', {
                year: 'numeric',
                month: 'numeric',
                day: 'numeric',
              })
          }
        </p>
      </div>
    </div>
  </a>
</article>

<style lang="scss">
  @import '../styles/_single';

  .blog {
    width: vw(318);
    transition: 0.5s;

    @include sp() {
      width: vw_sp(210);
    }
  }

  .link {
    display: block;
    width: 100%;
  }

  .blog__inner {
    height: 100%;
  }

  .blog__img {
    position: relative;
    width: 100%;
    height: vw(170);
    opacity: 0.8;

    @include sp() {
      height: vw_sp(110);
    }

    .img {
      height: 100%;
      object-fit: cover;
    }
  }

  .blog__text-area {
    padding: 27px 0 0;
    font-family: $noto-sans;

    @include sp() {
      padding: vw_sp(20) 0 0;
    }
  }

  .blog__category {
    display: inline-block;
    padding: 3px vw(15) 3px vw(2);
    font-family: $font-family-termina;
    font-size: vw(16);
    font-weight: 700;
    color: $color-base-white;
    background-color: $color-base-black;
    border-radius: 9999px;

    @include sp() {
      padding: vw_sp(2) vw_sp(10) vw_sp(2) vw_sp(2);
      font-size: vw_sp(10);
    }
  }

  .blog__category--modify {
    padding: 10px vw(20);

    @include sp() {
      padding: 10px vw_sp(10);
    }
  }

  .blog__category__inner {
    display: flex;
    gap: vw(10);
    align-items: center;
    justify-content: center;
  }

  .blog__category__image {
    position: relative;
    width: vw(33);
    height: vw(33);
    background-color: $color-base-white;
    border-radius: 50%;

    @include sp() {
      width: vw_sp(20);
      height: vw_sp(20);
    }
  }

  .blog__category__text {
    line-height: 1;
  }

  .blog__title {
    height: vw(100);
    margin: 15px 0 0;
    font-size: vw(22);
    font-weight: 700;
    line-height: 1.5;

    @include line-clamp(3);

    @include sp() {
      height: vw_sp(80);
      margin: vw_sp(10) 0 0;
      font-size: vw_sp(17);
    }
  }

  .blog__date {
    margin: 15px 0 0;
    font-size: vw(16);

    @include sp() {
      margin: vw_sp(10) 0 0;
      font-size: vw_sp(10);
    }
  }
</style>
<style lang="scss" is:global>
  @import '../styles/_single';

  .blog__category__image {
    img {
      position: absolute;
      top: 50%;
      left: 50%;
      width: vw(25);
      transform: translate(-50%, -50%);

      @include sp() {
        width: vw_sp(15);
      }
    }
  }
</style>
